<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Ibrahim Abou Elenein</title>
        <link>https://aboueleyes.github.io/posts/</link>
        <description>Recent content in Posts on Ibrahim Abou Elenein</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Mon, 01 Feb 2021 00:41:47 +0200</lastBuildDate>
        <atom:link href="https://aboueleyes.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Vim Sessions</title>
            <link>https://aboueleyes.github.io/posts/vim-sessions/</link>
            <pubDate>Mon, 01 Feb 2021 00:41:47 +0200</pubDate>
            
            <guid>https://aboueleyes.github.io/posts/vim-sessions/</guid>
            <description>Vim is an awesome editor. Vim provides a tool to save your time, helping you to get back to the previous mindset of the last time you left the project. It’s called sessions.
 A Session keeps the Views for all windows, plus the global settings. You can save a Session and when you restore it later the window layout looks the same. You can use a Session to quickly switch between different projects, automatically loading the files you were last working on in that project.</description>
            <content type="html"><![CDATA[<p><img src="/img/sessions.png" alt="vim"></p>
<h3 id="vim-is-an-awesome-editor">Vim is an awesome editor.</h3>
<p><code>Vim</code> provides a tool to save your time, helping you to get back to the previous mindset of the last time you left the project. It’s called <code>sessions</code>.</p>
<blockquote>
<p>A Session keeps the Views for all windows, plus the global settings. You can save a Session and when you restore it later the window layout looks the same. You can use a Session to quickly switch between different projects, automatically loading the files you were last working on in that project. from <code>:help sessions</code></p>
</blockquote>
<p>It’s always a huge pain having to reconfigure everything after restarting So :
<code>Vim</code>’s sessions is basically a tool to instantly save the state of everything in your current <code>Vim session</code>, allowing you to restore it the next time, instead of opening from scratch all the tabs/windows/buffers again.</p>
<h2 id="understanding-the-commands">Understanding the Commands:</h2>
<h3 id="to-save-a-session-mksession-mks">To Save a Session <code>:mksession</code>, <code>:mks</code></h3>
<p>The <code>:mksession</code> command, or <code>:mks</code>, is responsible for saving the current <code>session</code>. What the command actually does is that it writes a <code>Vim</code> script file that restores the current <code>session</code>.
If used alone, <code>:mks</code> will create a <code>Session.vim</code> file on the directory where the current <code>Vim</code> execution was started.</p>
<p>Using exclamation mark, <code>:mks!</code> the command overwrites <code>Session.vim</code> file if it already exists in the directory.
You can specify a custom file name to save the session <code>:mks!</code> <code>my-session.vim</code>. This allows you to save different sessions that can be used to work on different parts of the same project.</p>
<p>(You may consider creating a <code>vim-sessions/</code> <code>dir</code> inside your project’s root directory if the number of <code>session files</code> for the project keeps growing).</p>
<h3 id="to-restore-a-session-source-so-vim--s">To Restore a Session <code>:source</code>, <code>:so</code>, <code>vim -S</code></h3>
<p>There are basically two ways to restore a Vim session:</p>
<ol>
<li>
<p>On the terminal, before starting Vim, with the vim -S option:</p>
<p>If your project already has a <code>session</code> autogenerated file <code>(Session.vim)</code>, you can start <code>Vim</code> with the command <code>vim -S</code>, and it will look for the <code>Sessions.vim</code> file and start the session.
If you need to start from a custom session file, you might provide the file name with the command, for example, <code>vim -S my-session.vim</code>.</p>
</li>
<li>
<p>Inside Vim, using the <code>:source</code> or <code>:so</code> command:
It is very useful for projects that have many custom session files, allowing the user to change sessions without exiting Vim.</p>
</li>
</ol>
<h3 id="tip">Tip</h3>
<p>Add the following code to your <code>.vimrc</code> file:</p>
<pre><code>command! Xs :mks! | :xa &quot;save the session, save modified files, and exit
</code></pre><p>The next time you exit your project, make sure you do it with class 👌 using :Xs!</p>
<p>There are a few plugins to extend sessions like tpope/vim-obsession and xolox/vim-session.</p>
]]></content>
        </item>
        
        <item>
            <title>My Vim Setup</title>
            <link>https://aboueleyes.github.io/posts/my-vim-setup/</link>
            <pubDate>Thu, 31 Dec 2020 00:13:13 +0200</pubDate>
            
            <guid>https://aboueleyes.github.io/posts/my-vim-setup/</guid>
            <description>Writing English words and writing code are very different activities. When programming, you spend more time switching files, reading, navigating, and editing code compared to writing a long stream. It makes sense that there are different types of programs for writing English words versus code
As programmers, we spend most of our time editing code, so it’s worth investing time mastering an editor that fits your needs.
Vim has a rich history; it originated from the Vi editor (1976), and it’s still being developed today.</description>
            <content type="html"><![CDATA[<p><img src="/img/vim.jpeg" alt="vim"></p>
<p>Writing English words and writing code are very different activities. When programming, you spend more time switching files, reading, navigating, and editing code compared to writing a long stream. It makes sense that there are different types of programs for writing English words versus code</p>
<p>As programmers, we spend most of our time editing code, so it’s worth investing time mastering an editor that fits your needs.</p>
<p>Vim has a rich history; it originated from the Vi editor (1976), and it’s still being developed today. Vim has some really neat ideas behind it.</p>
<h2 id="philosophy-of-vim">Philosophy of Vim</h2>
<p>When programming, you spend most of your time reading/editing, not writing. For this reason, Vim is a modal editor: it has different modes for inserting text vs manipulating text. Vim is programmable (with Vimscript and also other languages like Python), and Vim’s interface itself is a programming language: keystrokes (with mnemonic names) are commands, and these commands are composable. Vim avoids the use of the mouse, because it’s too slow; Vim even avoids using the arrow keys because it requires too much movement.
The end result is an editor that can match the speed at which you think.</p>
<h2 id="customizing-vim">Customizing Vim</h2>
<p>Vim is customized through a plain-text configuration file in ~/.vimrc (containing Vimscript commands). There are probably lots of basic settings that you want to turn on.</p>
<p>Vim is heavily customizable, and it’s worth spending time exploring customization options</p>
<h2 id="plugins">Plugins</h2>
<ul>
<li>gruvbox</li>
<li>ctrlp</li>
<li>coc</li>
<li>vim tex</li>
<li>vim cool</li>
<li>vim markdown toc</li>
<li>nerd tree</li>
<li>tagbar</li>
<li>vim highlightedyank</li>
<li>ultisnips</li>
<li>Syntastic</li>
<li>airline</li>
</ul>
<blockquote>
<p>Also we will be assuming that you have vim-plug installed as you plugin manager. If you don’t, I recommend getting it. but if you don’t want to make the switch you can find all of the installation instructions on the plugins GitHub.</p>
</blockquote>
<h3 id="i-recommend-to-to-search-fot-every-plugin-and-its-configuration">I recommend to to search fot every plugin and its configuration.</h3>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-Vim" data-lang="Vim"><span style="color:#a6e22e">call</span> <span style="color:#a6e22e">plug</span>#<span style="color:#a6e22e">begin</span>(<span style="color:#e6db74">&#39;~/.vim/plugged&#39;</span>)<span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">Plug</span> <span style="color:#e6db74">&#39;morhetz/gruvbox&#39;</span> <span style="color:#75715e">&#34; color scheme </span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">Plug</span> <span style="color:#e6db74">&#39;vim-airline/vim-airline&#39;</span> <span style="color:#75715e">&#34; status bar</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">Plug</span> <span style="color:#e6db74">&#39;vim-airline/vim-airline-themes&#39;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">Plug</span> <span style="color:#e6db74">&#39;ctrlpvim/ctrlp.vim&#39;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">Plug</span> <span style="color:#e6db74">&#39;neoclide/coc.nvim&#39;</span>, {<span style="color:#e6db74">&#39;branch&#39;</span>: <span style="color:#e6db74">&#39;release&#39;</span>} <span style="color:#75715e">&#34; intellisense engine for VIM</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">Plug</span> <span style="color:#e6db74">&#39;lervag/vimtex&#39;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">Plug</span> <span style="color:#e6db74">&#39;romainl/vim-cool&#39;</span> <span style="color:#75715e">&#34; remove search light </span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">Plug</span> <span style="color:#e6db74">&#39;mzlogin/vim-markdown-toc&#39;</span>        <span style="color:#75715e">&#34; Markdown TOC builder</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">Plug</span> <span style="color:#e6db74">&#39;machakann/vim-highlightedyank&#39;</span>  <span style="color:#75715e">&#34; Highlight yanks</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">Plug</span> <span style="color:#e6db74">&#39;yggdroot/indentline&#39;</span>            <span style="color:#75715e">&#34; Shows indentation levels</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">Plug</span> <span style="color:#e6db74">&#39;SirVer/ultisnips&#39;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">Plug</span> <span style="color:#e6db74">&#39;majutsushi/tagbar&#39;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">Plug</span> <span style="color:#e6db74">&#39;scrooloose/nerdtree&#39;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">call</span> <span style="color:#a6e22e">plug</span>#<span style="color:#a6e22e">end</span>()<span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010">
</span></code></pre></div><p>BE SURE TO RUN <code>:PlugInstall</code> WHEN WE ARE DONE!</p>
<p>My vim conf and plugin coonf</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-Vim" data-lang="Vim"><span style="color:#75715e">&#34;color scheme</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#66d9ef">let</span> <span style="color:#a6e22e">g</span>:<span style="color:#a6e22e">gruvbox_italic</span>=<span style="color:#ae81ff">1</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">autocmd</span> <span style="color:#a6e22e">vimenter</span> * ++<span style="color:#a6e22e">nested</span> <span style="color:#a6e22e">colorscheme</span> <span style="color:#a6e22e">gruvbox</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">background</span>=dark    <span style="color:#75715e">&#34; Setting dark mode</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">
</span><span style="color:#75715e">&#34;airline </span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#66d9ef">let</span> <span style="color:#a6e22e">g</span>:<span style="color:#a6e22e">airline</span>#<span style="color:#a6e22e">extensions</span>#<span style="color:#a6e22e">tabline</span>#<span style="color:#a6e22e">enabled</span> = <span style="color:#ae81ff">1</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#66d9ef">let</span> <span style="color:#a6e22e">g</span>:<span style="color:#a6e22e">airline_powerline_fonts</span> = <span style="color:#ae81ff">1</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#66d9ef">let</span> <span style="color:#a6e22e">g</span>:<span style="color:#a6e22e">airline</span>#<span style="color:#a6e22e">extensions</span>#<span style="color:#a6e22e">tabline</span>#<span style="color:#a6e22e">enabled</span> = <span style="color:#ae81ff">1</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#66d9ef">let</span> <span style="color:#a6e22e">g</span>:<span style="color:#a6e22e">airline</span>#<span style="color:#a6e22e">extensions</span>#<span style="color:#a6e22e">tabline</span>#<span style="color:#a6e22e">buffer_nr_show</span> = <span style="color:#ae81ff">1</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">&#34;ctlrp </span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#66d9ef">let</span> <span style="color:#a6e22e">g</span>:<span style="color:#a6e22e">ctrlp_map</span> = <span style="color:#e6db74">&#39;&lt;c-p&gt;&#39;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#66d9ef">let</span> <span style="color:#a6e22e">g</span>:<span style="color:#a6e22e">ctrlp_cmd</span> = <span style="color:#e6db74">&#39;CtrlP&#39;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">relativenumber</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">number</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#66d9ef">let</span> <span style="color:#a6e22e">NERDTreeMinimalUI</span> = <span style="color:#ae81ff">1</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#66d9ef">let</span> <span style="color:#a6e22e">NERDTreeDirArrows</span> = <span style="color:#ae81ff">1</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">wildmenu</span>            <span style="color:#75715e">&#34; visual autocomplete for command menu</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">showmatch</span>           <span style="color:#75715e">&#34; highlight matching [{()}]</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">linebreak</span>           <span style="color:#75715e">&#34; Have lines wrap instead of continue off-screen</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">cursorline</span>          <span style="color:#75715e">&#34; highlight current line</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">incsearch</span>           <span style="color:#75715e">&#34; search as characters are entered</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">hlsearch</span>            <span style="color:#75715e">&#34; highlight matches</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">ignorecase</span>          <span style="color:#75715e">&#34; Ignore case in searches by default</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">smartcase</span>           <span style="color:#75715e">&#34; But make it case sensitive if an uppercase is entered</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">tabstop</span>=<span style="color:#ae81ff">4</span>       <span style="color:#75715e">&#34; number of visual spaces per TAB</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">softtabstop</span>=<span style="color:#ae81ff">4</span>   <span style="color:#75715e">&#34; number of spaces in tab when editing</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">shiftwidth</span>=<span style="color:#ae81ff">4</span>    <span style="color:#75715e">&#34; Insert 4 spaces on a tab</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">expandtab</span>       <span style="color:#75715e">&#34; tabs are spaces, mainly because of python</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">mouse</span>+=<span style="color:#a6e22e">a</span>            <span style="color:#75715e">&#34; A necessary evil, mouse support</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">noerrorbells</span> <span style="color:#a6e22e">visualbell</span> <span style="color:#a6e22e">t_vb</span>=    <span style="color:#75715e">&#34;Disable annoying error noises</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">hidden</span>              <span style="color:#75715e">&#34; Allows having hidden buffers (not displayed in any window)</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">encoding</span>=<span style="color:#a6e22e">UTF</span><span style="color:#ae81ff">-8</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#66d9ef">let</span> <span style="color:#a6e22e">mapleader</span> = <span style="color:#e6db74">&#34; &#34;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">&#34; Sensible stuff</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">backspace</span>=<span style="color:#a6e22e">indent</span>,<span style="color:#a6e22e">eol</span>,<span style="color:#a6e22e">start</span>     <span style="color:#75715e">&#34; Make backspace behave in a more intuitive way</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">map</span> &lt;<span style="color:#a6e22e">C</span>-<span style="color:#a6e22e">b</span>&gt; :<span style="color:#a6e22e">TagbarToggle</span>&lt;<span style="color:#a6e22e">CR</span>&gt;<span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">&#34; Open when no files were speficied on vim launch</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">autocmd</span> <span style="color:#a6e22e">StdinReadPre</span> * <span style="color:#66d9ef">let</span> <span style="color:#a6e22e">s</span>:<span style="color:#a6e22e">std_in</span>=<span style="color:#ae81ff">1</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">autocmd</span> <span style="color:#a6e22e">VimEnter</span> * <span style="color:#66d9ef">if</span> <span style="color:#a6e22e">argc</span>() == <span style="color:#ae81ff">0</span> &amp;&amp; !<span style="color:#a6e22e">exists</span>(<span style="color:#e6db74">&#34;s:std_in&#34;</span>) | <span style="color:#a6e22e">NERDTree</span> | <span style="color:#66d9ef">endif</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#75715e">
</span><span style="color:#75715e">&#34; Toggle nerdtree</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">map</span> &lt;<span style="color:#a6e22e">C</span>-<span style="color:#a6e22e">n</span>&gt; :<span style="color:#a6e22e">NERDTreeToggle</span>&lt;<span style="color:#a6e22e">CR</span>&gt;<span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">map</span> &lt;<span style="color:#a6e22e">F5</span>&gt; :<span style="color:#a6e22e">call</span> <span style="color:#a6e22e">CompileRunGcc</span>()&lt;<span style="color:#a6e22e">CR</span>&gt;<span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">func</span>! <span style="color:#a6e22e">CompileRunGcc</span>()<span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">exec</span> <span style="color:#e6db74">&#34;w&#34;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#66d9ef">if</span> &amp;<span style="color:#a6e22e">filetype</span> == <span style="color:#e6db74">&#39;c&#39;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">exec</span> <span style="color:#e6db74">&#34;!gcc % -o %&lt;&#34;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">exec</span> <span style="color:#e6db74">&#34;!time ./%&lt;&#34;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#66d9ef">elseif</span> &amp;<span style="color:#a6e22e">filetype</span> == <span style="color:#e6db74">&#39;cpp&#39;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">exec</span> <span style="color:#e6db74">&#34;!g++ % -o %&lt;&#34;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">exec</span> <span style="color:#e6db74">&#34;!time ./%&lt;&#34;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#66d9ef">elseif</span> &amp;<span style="color:#a6e22e">filetype</span> == <span style="color:#e6db74">&#39;java&#39;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">exec</span> <span style="color:#e6db74">&#34;!javac %&#34;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">exec</span> <span style="color:#e6db74">&#34;!time java -cp %:p:h %:t:r&#34;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#66d9ef">elseif</span> &amp;<span style="color:#a6e22e">filetype</span> == <span style="color:#e6db74">&#39;sh&#39;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">exec</span> <span style="color:#e6db74">&#34;!time bash %&#34;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#66d9ef">elseif</span> &amp;<span style="color:#a6e22e">filetype</span> == <span style="color:#e6db74">&#39;python&#39;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">exec</span> <span style="color:#e6db74">&#34;!time python2.7 %&#34;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#66d9ef">elseif</span> &amp;<span style="color:#a6e22e">filetype</span> == <span style="color:#e6db74">&#39;html&#39;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">exec</span> <span style="color:#e6db74">&#34;!firefox % &amp;&#34;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#66d9ef">elseif</span> &amp;<span style="color:#a6e22e">filetype</span> == <span style="color:#e6db74">&#39;go&#39;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">exec</span> <span style="color:#e6db74">&#34;!go build %&lt;&#34;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">exec</span> <span style="color:#e6db74">&#34;!time go run %&#34;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#66d9ef">elseif</span> &amp;<span style="color:#a6e22e">filetype</span> == <span style="color:#e6db74">&#39;mkd&#39;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">exec</span> <span style="color:#e6db74">&#34;!~/.vim/markdown.pl % &gt; %.html &amp;&#34;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">exec</span> <span style="color:#e6db74">&#34;!firefox %.html &amp;&#34;</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#66d9ef">endif</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">endfunc</span><span style="color:#960050;background-color:#1e0010">
</span></code></pre></div><p>try not to copy-and-paste full configuration, but read it, understand it, and take what you need.</p>
]]></content>
        </item>
        
        <item>
            <title>The Easiest Way Ever to Make Nice Presentaions</title>
            <link>https://aboueleyes.github.io/posts/the-easiest-way-ever-to-make-nice-presentaions/</link>
            <pubDate>Sun, 27 Dec 2020 19:57:50 +0200</pubDate>
            
            <guid>https://aboueleyes.github.io/posts/the-easiest-way-ever-to-make-nice-presentaions/</guid>
            <description>As a Linux user, we really love doing things from the terminal, we love to code, we hate GUI, We have no time to drag and drop as “muggles”
 I care about the technology. There are people who care about the user interface (UI); I can’t do UI to save my life. I mean if I was stranded on an island and the only way to get off that island was to make a pretty UI, I’d die there.</description>
            <content type="html"><![CDATA[<p><img src="/img/image.png" alt=""></p>
<p>As a <code>Linux</code> user, we really love doing things from the terminal, we love to code, we hate <code>GUI</code>, We have no time to drag and drop as <code>“muggles”</code></p>
<blockquote>
<p>I care about the technology. There are people who care about the user interface (UI); I can’t do UI to save my life. I mean if I was stranded on an island and the only way to get off that island was to make a pretty UI, I’d die there.
&ndash; <!-- raw HTML omitted --><em>Linus Torvalds</em><!-- raw HTML omitted --></p>
</blockquote>
<p>Microsoft PowerPoint is really pain, specially if you are writing presentation that includes Math equations or code snippets</p>
<h2 id="latex">LaTeX</h2>
<p>So using latex <code>beamer</code> is much superior for many reasons :</p>
<ol>
<li>
<p>Consistent tools. I use LaTeX for my regular study. I need an easy way to get my &ldquo;printed&rdquo; work into the presentation. <code>LaTeX-beamer</code> allows me to do this very easily. All the way to publishing it on my homepage.
This in particular includes the various functionality ranging from formulas, code excerpts to any other <code>LaTeX</code> extension.</p>
</li>
<li>
<p>Focus. On the contents, not on the presentation. Once you are used to <code>LaTeX</code>presentations, <code>PowerPoint</code> pretty much looks like a drawing program to you, instead of a presentation tool.</p>
</li>
<li>
<p>Quality. Even with &ldquo;just&rdquo; screen resolution, <code>LaTeX</code> just looks more polished.</p>
</li>
<li>
<p>As for being static. I never use animations in my presentations. They tend to distract people from what I&rsquo;m saying. And after all, it&rsquo;s not a slideshow, but a talk.</p>
</li>
<li>
<p>Programmable. You can even write programs to generate your slides. Or plots.</p>
</li>
</ol>
<p>But this may be too much for simple presentations</p>
<h2 id="markdown">Markdown</h2>
<p>We all know how cool <code>markdown</code> is, and it has  very easy syntax, so can we really make presentations with <code>markdown</code>? Let&rsquo;s do it!</p>
<p>First you should have <code>LaTeX</code> installed</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"> $ sudo apt install texlive-latex-recommended
</code></pre></div><p>Also download <code>pandoc</code></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ sudo apt install pandoc
</code></pre></div><p>Now we are ready!</p>
<p>Open <code>vim</code> or your favorite text-editor and create the md file</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ mkdir pres 
$ cd pres 
$ vim pres.md 
</code></pre></div><p>And now write the following into the file</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-markdown" data-lang="markdown">---
title:
<span style="color:#66d9ef">-</span> Ibrahim&#39;s pres 
author:
<span style="color:#66d9ef">-</span> Ibrahim Abou Elenein
theme:
<span style="color:#66d9ef">-</span> Copenhagen
---

# Section One 

Some Text 

+ item one 
+ item two 
+ etc ... 

# Section Two 

<span style="color:#75715e">## subsection 
</span><span style="color:#75715e"></span>BLA BLA BLA
</code></pre></div><p>Now run the following command</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ pandoc pres.md -t beamer -o pres.pdf 
</code></pre></div><p><img src="/img/src1.png" alt="">
<img src="/img/src2.png" alt="">
<img src="/img/src3.png" alt=""></p>
<p>Voilà!, here we have a very nice presentation, you can use all the features of <code>markdown</code>, The Sections are new slides.</p>
]]></content>
        </item>
        
        <item>
            <title>Why I Started Blogging</title>
            <link>https://aboueleyes.github.io/posts/why-i-started-blogging/</link>
            <pubDate>Fri, 25 Dec 2020 23:13:53 +0200</pubDate>
            
            <guid>https://aboueleyes.github.io/posts/why-i-started-blogging/</guid>
            <description>I would like to motivate my friends to blog, I will explain why.
Documentation as a Way of Studying. One of the best ways to digest what you learn is to be able to articulate what you learned in your words and come up with takeaways. So, write a tutorial blog post or anything that will help you understand in-depth what you are learning and know it by heart.
 If You Really Want to Master Something, Teach It The person who learns the most in any classroom is the teacher.</description>
            <content type="html"><![CDATA[<p>I would like to motivate my friends to blog, I will explain why.</p>
<h2 id="documentation-as-a-way-of-studying">Documentation as a Way of Studying.</h2>
<p>One of the best ways to digest what you learn is to be able to articulate what you learned in your words and come up with takeaways. So, write a tutorial blog post or anything that will help you understand in-depth what you are learning and know it by heart.</p>
<blockquote>
<p>If You Really Want to Master Something, Teach It
The person who learns the most in any classroom is the teacher.</p>
</blockquote>
<h2 id="someone-is-searching-for-what-you-will-write">Someone Is Searching for What You Will Write.</h2>
<p>Don&rsquo;t hesitate to share your knowledge, you have something to share to the world!</p>
<p>As an undergraduate, you learn computer science fundamentals and many subjects in-depth. You learn data structures, algorithms, machine learning, computer architecture, databases, and many other computer fundamentals. Once you are a graduate, you have a job and start focusing on coding more.
You start to forget everything that you studied before, your learning curve is less as a graduate, and computer science always changes. So if you worked as a software developer, you may forget those operating system classes about scheduling techniques, even though they may help you to enhance your code. So even though what you learn as an undergraduate seems normal and well-known, graduates will enjoy reading and learning from what you write in on a daily basis.</p>
<h2 id="encourages-you-to-self-learn-more">Encourages You to Self-Learn More</h2>
<p>Once you start sharing your knowledge, get readers, you will be encouraged to learn more. Also, to be able to write better blog posts, you will always need to know a little more than what you study in university. Blogging educates you to read from others as well, so you will learn from others a lot.</p>
<h2 id="as-a-journal">As a Journal</h2>
<p>Last, studying anything takes a long time, and if you are in university it takes years! So, it is a great way to journal about your life as a student and see how you grew and learned more and more with time.</p>
<h2 id="improve-your-writing-skills">Improve Your Writing Skills</h2>
<p>One of the best ways to motivate yourself is to remember that you’re developing a skill that will serve you well for the rest of your life.</p>
]]></content>
        </item>
        
    </channel>
</rss>
